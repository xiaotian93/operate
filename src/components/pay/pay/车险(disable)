import React, { Component } from 'react';
import { Button , message} from 'antd';

// import Filter from '../../ui/Filter_obj8';
import { axios_sh } from '../../../ajax/request'
import { cxfq_pay_list , cxfq_upder_pay } from '../../../ajax/api';
import { page } from '../../../ajax/config';
import { format_table_data, format_time ,bmd} from '../../../ajax/tool';
import Permissions from '../../../templates/Permissions';
import ComponentRoute from '../../../templates/ComponentRoute';
import List from '../../templates/list';
class Borrow extends Component{
    constructor(props) {
        super(props);
        this.state = {
            selectedRowKeys: [],
            selectedRows: [],
            loading: false,
            total:1,
            current:1,
            filter:{},
            pageSize:page.size,
            data:[],
            pay_confirm:{
                show:false,
                title:"",
                ids:"",
                money:0,
                combine:false,
                loading:false
            },
            loanPeriod:JSON.parse(localStorage.getItem("select")).zzb_loan_period,
            sumSyx:0,
            sumJqx:0,
            sumCcs:0,
            sumDiscount:''
        };
    }
    componentWillMount(){
        this.columns = [
            {
                title: '序号',
                dataIndex: 'key',
                render:(text,record,index)=>{
                    if(text==="合计"){
                        return text;
                    }
                    return `${index+1}`
                }
            },
            {
                title: '订单编号',
                dataIndex: 'orderNo',
            },
            {
                title: '订单时间',
                dataIndex:"createTime",
                render : (data) => {
                    return data?format_time(data):"--"
                },
                sorter: (a, b) => {
                    return bmd.getSort(a,b,"createTime")
                }
            },
            {
                title: '借款方',
                dataIndex:"borrower"
            },
            {
                title: '借款金额',
                dataIndex:'loanMoney',
                render:data=>{
                    return data?data.money():"--"
                },
                sorter: (a, b) => {
                    return bmd.getSort(a,b,"loanMoney")
                }
            },
            // {
            //     title: '借款期限(月)',
            //     dataIndex:'periods'
            // },
            {
                title: '操作',
                // width:150,
                render: (data) => (
                    <span>
                        {/*<a className="ant-btn-success ant-btn-sm" onClick={()=>(this.set_confirm(true,false,data.id,data.dataObj.showVo.borrowInfo.amount))}>放款</a>&emsp;*/}
                        <Permissions size="small" server={global.AUTHSERVER.cxfq.key} tag="button" permissions={global.AUTHSERVER.cxfq.access.pay_detail} onClick={()=>(this.detail(data.orderNo))} src={'/zf/pay/cxfq/detail?orderNo='+data.orderNo+"&type=pay"}>查看</Permissions>&emsp;
                    </span>
                )
            }
        ];
        this.filter = {
            orderNo :{
                name:"订单编号",
                type:"text",
                placeHolder:"请输入订单编号"
            },
            time:{
                name:"订单时间",
                type:"range_date",
                feild_s:"startTime",
                feild_e:"endTime",
                placeHolder:['开始日期',"结束日期"]
            },
            borrower :{
                name:"借款方",
                type:"text",
                placeHolder:"请输入借款方"
            },
            // insuranceNo :{
            //     name:"保单号",
            //     type:"text",
            //     placeHolder:"请输入保单号/投保单号"
            // },
            // customerType :{
            //     name:"业务类型",
            //     type:"select",
            //     placeHolder:"请选择",
            //     values:[{name:"企业",val:1},{name:"个人",val:0}]
            // },
            // productId :{
            //     name:"产品名称",
            //     type:"select",
            //     placeHolder:"请选择",
            //     values:'productIds'
            // },
            // businessName :{
            //     name:"商户名称",
            //     type:"text",
            //     placeHolder:"请选择商户名称",
            //     values:'businessIds'
            // },
            // carNo :{
            //     name:"车牌号",
            //     type:"text",
            //     placeHolder:"请输入车牌号/发动机号"
            // }
        }
    }
    componentDidMount(){
        var select=window.localStorage.getItem(this.props.location.pathname);
        if(select){
            this.get_list(1,JSON.parse(select).remberData);
        }else{
            this.get_list();
        }
    }
    get_list(page_no,filter={}){
        let data = JSON.parse(JSON.stringify(filter));
        data.page = page_no||1;
        data.page_size = page.size;
        data.status = 5;
        this.setState({
            loading:true,
            selectedRowKeys:[]
        })
        axios_sh.post(cxfq_pay_list,data).then((data)=>{
            let list = data.data;
            this.setState({
                data:format_table_data(list,page_no,page.size),
                loading:false,
                total:data.totalData,
                current:data.current,
                sumSyx:data.sumSyx?data.sumSyx.money():'',
                sumJqx:data.sumJqx?data.sumJqx.money():'',
                sumCcs:data.sumCcs?data.sumCcs.money():'',
                sumDiscount:data.sumDiscount===null?"":data.sumDiscount
            })
        });
    }
    send_pay(){
        let rqd = [];
        let pay_confirm = JSON.parse(JSON.stringify(this.state.pay_confirm));
        let ids = pay_confirm.ids;
        // if(typeof(ids)==='string'||typeof(ids)==='number'){
        //     rqd.push("id="+ids)
        // }else{
        //     for(let i in ids){
        //         rqd.push("id="+ids[i])
        //     }
        // }
        rqd.push("orderNos="+ids.join(","));
        rqd.push("combine="+pay_confirm.combine);
        pay_confirm.loading = true;
        this.setState({
            pay_confirm:pay_confirm
        })
        axios_sh.post(cxfq_upder_pay,rqd.join("&")).then((data)=>{
            this.get_list();
            this.setState({
                selectedRows:[]
            })
            this.set_confirm(false);
            message.success(data.msg);
        });
    }
    set_confirm(show,combine=false,ids,moneys){
        let confirm = {
            show:show,
            title:"",
            ids:'',
            money:0,
            combine:combine,
            loading:false
        }
        if(show){
            confirm.ids = ids;
            confirm.money = moneys;
            if(combine){
                confirm.title = "合并支付确认"
            }else{
                confirm.title = (typeof(ids)==='object'?"逐条支付确认":"支付确认")
            }
        }
        this.setState({
            pay_confirm:{
                ...confirm
            }
        })
    }
    batch_operation(combine){
        let rows = this.state.selectedRows;
        let ids = [],moneys=0;
        if(rows.length<=0){
            message.warn("请选择订单");
            return;
        }
        for(let r in rows){
            ids.push(rows[r].orderNo);
            moneys += parseFloat(rows[r].loanMoney);
        }
        this.set_confirm(true,combine,ids,moneys);
    }
    get_filter(data){
        let filter = {};
        filter = JSON.parse(JSON.stringify(data));
        this.setState({
            filter:filter
        })
        this.get_list(1,filter);
    }
    detail(id){
        window.open('/zf/pay/cxfq/detail?orderNo='+id+"&type=pay");
    }
    page_up(page,pageSize){
        window.scrollTo(0,0);
        this.get_list(page,this.state.filter);
    }
    render (){
        const { selectedRowKeys } = this.state;
        let pagination = {
            total : this.state.total,
            current : this.state.current,
            pageSize : this.state.pageSize,
            onChange : this.page_up.bind(this),
            showTotal:total=>`共${total}条数据`
        }
        const rowSelection = {
            selectedRowKeys,
            onChange: (selectedRowKeys, selectedRows) => {
                console.log(selectedRowKeys,selectedRows);
                this.setState({ selectedRowKeys , selectedRows });
            },
            getCheckboxProps: record => ({
                disabled: record.name === 'Disabled User',
                name: record.name
            }),
        };
        const table_props = {
            rowSelection:rowSelection,
            columns:this.columns ,
            dataSource:this.state.data,
            pagination : pagination,
            loading:this.state.loading,
        }

        const footer = [
            <Button key="back" onClick={(e)=>(this.set_confirm(false,false))}>取消</Button>,
            <Button key="submit" type="primary" loading={this.state.pay_confirm.loading} onClick={this.send_pay.bind(this)}>确认</Button>
        ]
        const model_props = {
            visible : this.state.pay_confirm.show, 
            title : this.state.pay_confirm.title,
            onOk : this.send_pay.bind(this), 
            onCancel : (e)=>(this.set_confirm(false,false)),
            footer : footer
        }
        const table={
            filter:{
                "data-get":this.get_filter.bind(this),
                "data-source":this.filter,
                "data-paths":this.props.location.pathname,
            },
            tableInfo:table_props,
            tableTitle:{
                left:<span>
                    金额单位：元&emsp;当前查询结果 借款金额合计:<span className="total-bold">{this.state.sumSyx}</span>元 
                </span>,
                right:<span>
                    <Permissions server={global.AUTHSERVER.cxfq.key} tag="button" type="primary" permissions={global.AUTHSERVER.cxfq.access.pay_request} onClick={(e)=>(this.batch_operation(true))}>批量合并支付</Permissions>&emsp;
                    <Permissions server={global.AUTHSERVER.cxfq.key} tag="button" type="primary" permissions={global.AUTHSERVER.cxfq.access.pay_request} onClick={(e)=>(this.batch_operation(false))}>批量逐条支付</Permissions>
                </span>
            },
            modalInfo:model_props,
            modalContext:<h3>是否确认支付{ this.state.pay_confirm.money.money() }元?</h3>
        }
        return(
            <List {...table} />   
            // <div className="Component-body">
            //     <Filter data-get={this.get_filter.bind(this)} data-source={this.filter} />
            //     <Row className="table-content">
            //         <div className="table-btns">
            //             <div className="text-orange">
            //                 当前查询结果 借款金额合计:<span className="total-bold">{this.state.sumSyx}</span>元 
            //                 {/* &emsp;交强险合计:{this.state.sumJqx}元 &emsp;车船税合计:{this.state.sumCcs}元&emsp; */}
            //                 {/* {this.state.sumDiscount===''?'':"保证金合计:"+this.state.sumDiscount+"元"} */}
            //             </div>
            //             <div>
            //                 <Permissions server={global.AUTHSERVER.cxfq.key} tag="button" type="primary" onClick={(e)=>(this.batch_operation(true))}>批量合并支付</Permissions>&emsp;
            //                 <Permissions server={global.AUTHSERVER.cxfq.key} tag="button" type="primary" onClick={(e)=>(this.batch_operation(false))}>批量逐条支付</Permissions>
            //             </div>
                        
            //         </div>
            //         <Table {...table_props} bordered />
            //     </Row>
            //     <Modal {...model_props}>
            //         <h3>是否确认支付{ this.state.pay_confirm.money.money() }元?</h3>
            //     </Modal>
            // </div>
        )
    }
}

export default ComponentRoute(Borrow);